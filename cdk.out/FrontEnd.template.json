{
 "Resources": {
  "vpcA2121C38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "hinagiku-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/Resource"
   }
  },
  "vpcPublicsubnetSubnet1SubnetCF08D717": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Publicsubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PublicsubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet1/Subnet"
   }
  },
  "vpcPublicsubnetSubnet1RouteTableB491D4F4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PublicsubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet1/RouteTable"
   }
  },
  "vpcPublicsubnetSubnet1RouteTableAssociation3995F45A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicsubnetSubnet1RouteTableB491D4F4"
    },
    "SubnetId": {
     "Ref": "vpcPublicsubnetSubnet1SubnetCF08D717"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet1/RouteTableAssociation"
   }
  },
  "vpcPublicsubnetSubnet1DefaultRoute8667E540": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicsubnetSubnet1RouteTableB491D4F4"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet1/DefaultRoute"
   }
  },
  "vpcPublicsubnetSubnet2Subnet27880746": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Publicsubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PublicsubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet2/Subnet"
   }
  },
  "vpcPublicsubnetSubnet2RouteTable57DF758F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PublicsubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet2/RouteTable"
   }
  },
  "vpcPublicsubnetSubnet2RouteTableAssociationC9978DF8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicsubnetSubnet2RouteTable57DF758F"
    },
    "SubnetId": {
     "Ref": "vpcPublicsubnetSubnet2Subnet27880746"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet2/RouteTableAssociation"
   }
  },
  "vpcPublicsubnetSubnet2DefaultRouteB1CABA91": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicsubnetSubnet2RouteTable57DF758F"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PublicsubnetSubnet2/DefaultRoute"
   }
  },
  "vpcPrivateSubnetSubnet1Subnet606EC7E6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PrivateSubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PrivateSubnetSubnet1/Subnet"
   }
  },
  "vpcPrivateSubnetSubnet1RouteTableFF82E60B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PrivateSubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PrivateSubnetSubnet1/RouteTable"
   }
  },
  "vpcPrivateSubnetSubnet1RouteTableAssociationC1508501": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnetSubnet1RouteTableFF82E60B"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnetSubnet1Subnet606EC7E6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PrivateSubnetSubnet1/RouteTableAssociation"
   }
  },
  "vpcPrivateSubnetSubnet2SubnetCC7CB774": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PrivateSubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PrivateSubnetSubnet2/Subnet"
   }
  },
  "vpcPrivateSubnetSubnet2RouteTableBFF9D610": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "FrontEnd/vpc/PrivateSubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PrivateSubnetSubnet2/RouteTable"
   }
  },
  "vpcPrivateSubnetSubnet2RouteTableAssociationFAE39698": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnetSubnet2RouteTableBFF9D610"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnetSubnet2SubnetCC7CB774"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/PrivateSubnetSubnet2/RouteTableAssociation"
   }
  },
  "vpcIGWE57CBDCA": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "hinagiku-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/IGW"
   }
  },
  "vpcVPCGW7984C166": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/VPCGW"
   }
  },
  "vpcRestrictDefaultSecurityGroupCustomResourceA6EBC6D0": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "vpcA2121C38",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FrontEnd/vpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "vpcA2121C38",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e",
    "aws:asset:property": "Code"
   }
  },
  "ServiceDiscovery76C640CC": {
   "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
   "Properties": {
    "Name": "local",
    "Vpc": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/ServiceDiscovery/Resource"
   }
  },
  "FrontSecurityGroupDA8FDD74": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "FrontEnd/FrontSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/FrontSecurityGroup/Resource"
   }
  },
  "BackSecurityGroup2F5D1004": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "FrontEnd/BackSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackSecurityGroup/Resource"
   }
  },
  "BackSecurityGroupfromFrontEndFrontSecurityGroup520921B212351EDE9E2E": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from FrontEndFrontSecurityGroup520921B2:1235",
    "FromPort": 1235,
    "GroupId": {
     "Fn::GetAtt": [
      "BackSecurityGroup2F5D1004",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "FrontSecurityGroupDA8FDD74",
      "GroupId"
     ]
    },
    "ToPort": 1235
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackSecurityGroup/from FrontEndFrontSecurityGroup520921B2:1235"
   }
  },
  "HandlerServiceRoleFCDC14AE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "vpcPrivateSubnetSubnet1RouteTableAssociationC1508501",
    "vpcPrivateSubnetSubnet2RouteTableAssociationFAE39698"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Handler/ServiceRole/Resource"
   }
  },
  "HandlerSecurityGroupADE899E8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function FrontEndHandler90F3BD78",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   },
   "DependsOn": [
    "vpcPrivateSubnetSubnet1RouteTableAssociationC1508501",
    "vpcPrivateSubnetSubnet2RouteTableAssociationFAE39698"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Handler/SecurityGroup/Resource"
   }
  },
  "Handler886CB40B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Join": [
       "",
       [
        {
         "Ref": "AWS::AccountId"
        },
        ".dkr.ecr.",
        {
         "Ref": "AWS::Region"
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/my-app-dev:latest"
       ]
      ]
     }
    },
    "MemorySize": 256,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "HandlerServiceRoleFCDC14AE",
      "Arn"
     ]
    },
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "HandlerSecurityGroupADE899E8",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "vpcPrivateSubnetSubnet1Subnet606EC7E6"
      },
      {
       "Ref": "vpcPrivateSubnetSubnet2SubnetCC7CB774"
      }
     ]
    }
   },
   "DependsOn": [
    "HandlerServiceRoleFCDC14AE",
    "vpcPrivateSubnetSubnet1RouteTableAssociationC1508501",
    "vpcPrivateSubnetSubnet2RouteTableAssociationFAE39698"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Handler/Resource"
   }
  },
  "ApiF70053CD": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "Frontend",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Api/Resource"
   }
  },
  "ApiDefaultRouteIntegrationDB7B670E": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "Handler886CB40B",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Api/DefaultRoute/Integration/Resource"
   }
  },
  "ApiDefaultRouteIntegrationPermission612BAC34": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Handler886CB40B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiF70053CD"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Api/DefaultRoute/Integration-Permission"
   }
  },
  "ApiDefaultRoute1D83B0D8": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ApiDefaultRouteIntegrationDB7B670E"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Api/DefaultRoute/Resource"
   }
  },
  "ApiDefaultStage189A7074": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ApiF70053CD"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/Api/DefaultStage/Resource"
   }
  },
  "BackendTaskTaskRoleAB477026": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendTask/TaskRole/Resource"
   }
  },
  "BackendTaskTaskRoleDefaultPolicy15E8542C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BackendTaskTaskRoleDefaultPolicy15E8542C",
    "Roles": [
     {
      "Ref": "BackendTaskTaskRoleAB477026"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendTask/TaskRole/DefaultPolicy/Resource"
   }
  },
  "BackendTask72BF3D47": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -f http://localhost:1235 || exit 1"
       ],
       "Interval": 30,
       "Retries": 2,
       "StartPeriod": 5,
       "Timeout": 15
      },
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "AWS::AccountId"
         },
         ".dkr.ecr.",
         {
          "Ref": "AWS::Region"
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/my-app-dev:latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "BackendTaskBackendContainerLogGroup71AC9534"
        },
        "awslogs-stream-prefix": "ecs-fsde-back",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "BackendContainer",
      "PortMappings": [
       {
        "ContainerPort": 1235,
        "HostPort": 1235,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "BackendTaskExecutionRole0FB96A90",
      "Arn"
     ]
    },
    "Family": "FrontEndBackendTask8C16499D",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "ARM64"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "BackendTaskTaskRoleAB477026",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendTask/Resource"
   }
  },
  "BackendTaskBackendContainerLogGroup71AC9534": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendTask/BackendContainer/LogGroup/Resource"
   }
  },
  "BackendTaskExecutionRole0FB96A90": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendTask/ExecutionRole/Resource"
   }
  },
  "BackendTaskExecutionRoleDefaultPolicyFF93A446": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/my-app-dev"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BackendTaskBackendContainerLogGroup71AC9534",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BackendTaskExecutionRoleDefaultPolicyFF93A446",
    "Roles": [
     {
      "Ref": "BackendTaskExecutionRole0FB96A90"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendTask/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "BackCluster747E8F84": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackCluster/Resource"
   }
  },
  "BackendService7A4224EE": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "BackCluster747E8F84"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 4,
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "BackSecurityGroup2F5D1004",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "vpcPublicsubnetSubnet1SubnetCF08D717"
       },
       {
        "Ref": "vpcPublicsubnetSubnet2Subnet27880746"
       }
      ]
     }
    },
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "BackendServiceCloudmapService7E353D12",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "BackendTask72BF3D47"
    }
   },
   "DependsOn": [
    "BackendTaskTaskRoleDefaultPolicy15E8542C",
    "BackendTaskTaskRoleAB477026"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendService/Service"
   }
  },
  "BackendServiceCloudmapService7E353D12": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 30,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "ServiceDiscovery76C640CC",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "fsde-back",
    "NamespaceId": {
     "Fn::GetAtt": [
      "ServiceDiscovery76C640CC",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "BackendTaskTaskRoleDefaultPolicy15E8542C",
    "BackendTaskTaskRoleAB477026"
   ],
   "Metadata": {
    "aws:cdk:path": "FrontEnd/BackendService/CloudmapService/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32SYW+jMAyGf0u/p1lB9wPWa7VdpdOE6LSvJxNc5hUSFBuqKuK/nwJ0VNPuPvn1G9txHkh1SNJEJyu48NqU53VNhQ5HAXNWcOE/AU2qw1tr1O5k37KdyrqiJnPsCosSvUXlrhN8haLGxV+8LbMzBELOfharzFMPgsuMgxX0FuUZBC9wnS+ds60ImPcGragjms6TXJ+969rxuv8aB1t5ZB4Uo+/JYElsXI/+qsO8wt7yCzTILZhx/e/s49Q8TR/loNB4nWPrmMT5609gVDU0RQk67J05oz80UOFTZ83t5fc6Q98QMzk7KIJGh9xN9MaYuZrMyGBSg4KWqolFn+qwO9ltSzdslf8CN64pUI1Lsg5P4GPvK/B5jyeydKv+6jgrQBb9vVd3LOhj9U3O475jUruKdfjtqs+PcdPDoHJk1/nY0bG4ZklP9h9HmXc9lehHuFtmlPgsstW4jrPluOOgkuSHTtZQt++gN6vH+Yd+iPGe21wRfom0EV+ME7Co7knGfCI4KOtK1B/80KcbnSR6s/pgorXvrFCDOp/iX5dU8ipNAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "FrontEnd/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}